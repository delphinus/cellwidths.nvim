cellwidths.jax		setcellwidths() を使い易くします

Author: delphinus <me@delphinus.dev>
License: MIT license

CONTENTS						   *cellwidths-contents*

Introduction		|cellwidths-introduction|
Install			|cellwidths-install|
Usage			|cellwidths-usage|
  Further Usecase	|cellwidths-usage-further-usecase|
  Debugging		|cellwidths-usage-debugging|
  Developing		|cellwidths-usage-developing|
Functions		|cellwidths-functions|
Commands		|cellwidths-commands|
Versioning		|cellwidths-versioning|
Caveats			|cellwidths-caveats|
References		|cellwidths-references|

==============================================================================
INTRODUCTION					       *cellwidths-introduction*

これは |setcellwidths()| を簡単に設定するためのプラグインです。一般に、この関数
は以下のように利用されます。
>lua
	vim.fn.setcellwidths {
	  { 0x2103, 0x2103, 2 },
	  { 0x2160, 0x2169, 2 },
	}
<
引数には `{ 開始, 終了, 文字幅 }` という配列の配列を指定するのですが、いくつかの
理由から直接指定するのが困難です。

  - 現在指定している値を後から参照出来ない。
  - 値の追加、削除は出来ず、全ての配列を毎回指定しないといけない。
  - |'listchars'| や |'fillchars'| に指定した値と被っていると設定に失敗する。

このプラグインはこれらを解決します。

==============================================================================
INSTALL							    *cellwidths-install*

|'packpath'| 配下のディレクトリにクローンして下さい。
>bash
	git clone https://github.com/delphinus/cellwidths.nvim \
	  ~/.local/share/nvim/site/pack/foo/start/cellwidths.nvim

|init.lua| で |cellwidths-functions-setup| を呼び出すと使えます。
>lua
	-- 'listchars' と 'fillchars' を事前に設定しておくのがお勧めです。
	-- vim.opt.listchars = { eol = "⏎" }
	-- vim.opt.fillchars = { eob = "‣" }
	require("cellwidths").setup {
	  name = "default",
	}

または、好きなプラグインマネージャーを使って下さい。
>lua
	-- for lazy.nvim
	require("lazy").setup {
	  {
	    "delphinus/cellwidths.nvim",
	    -- 'listchars' と 'fillchars' を事前に設定しておくのがお勧めです。
	    -- init = function()
	    --   vim.opt.listchars = { eol = "⏎" }
	    --   vim.opt.fillchars = { eob = "‣" }
	    -- end,
	    opts = {
	      name = "default",
	    },
	  },
	}

==============================================================================
USAGE							      *cellwidths-usage*

予め定められた値を利用するにはテンプレート名を指定して呼び出して下さい。
>lua
	require("cellwidths").setup { name = "default" }

オリジナルの設定を作りたい場合は以下のようにして下さい。
>lua
	require("cellwidths").setup {
	  name = "user/custom",
	  ---@param cw cellwidths
	  fallback = function(cw)
	    -- 特定のテンプレートから追加・削除を行いたい場合は最初に load()
	    -- を呼んで下さい。
	    -- cw.load "default"

	    -- 好きな設定を追加します。以下のどの書式でも構いません。
	    cw.add(0x2103, 2)
	    cw.add { 0x2160, 0x2169, 2 }
	    cw.add {
	      { 0x2170, 0x2179, 2 },
	      { 0x2190, 0x2193, 2 },
	    }

	    -- 削除も出来ます。設定に存在しないコードポイントを指定してもエラー
	    -- になりません。
	    cw.delete(0x2103)
	    cw.delete { 0x2104, 0x2105, 0x2106 }
	  end,
	}

予め提供されたテンプレートを指定する場合、毎回 |'listchars'|, |'fillchars'| の値と
被っていないか検査します。自身で設定を保存した場合はこの処理が省かれるため読み
込みが高速化されます。

設定を保存したファイルはプラグイントップの `lua/templates/user/custom.lua` のよ
うなパスに保存されます。これには設定時の |'listchars'|, |'fillchars'| の値も保存さ
れ、次回以降、起動時に値が異なっていた場合は自動的に作り直されます。

設定のテスト中など、Neovim の起動中に設定を変更する場合は |cellwidths-commands|
を使うと便利です。
>vim
	" 「℃」を全角で扱います。
	:CellWidthsAdd 0x2103, 2
	" 設定を削除します。
	:CellWidthsDelete 0x2103
	" テンプレートを読み込みます。
	:CellWidthsLoad default
	" （現在利用中の）テンプレートを削除します。
	:CellWidthsRemove

------------------------------------------------------------------------------
FURTHER USECASE				      *cellwidths-usage-further-usecase*

テンプレートは |string.dump()| でコンパイルした状態で保存されるため読み込みも高
速ですが、予め提供されたテンプレートは |'listchars'|, |'fillchars'| の値と被ってい
ないか毎回検査されるため多少処理が重くなります。何も設定を増減しない場合でも、
`user/foo` テンプレートとして利用する方が高速になります。
>lua
	require("cellwidths").setup {
	  name = "user/default",
	  ---@param cw cellwidths
	  fallback = function(cw)
	    -- "default" テンプレートをそのまま使う。
	    cw.load "default"
	  end,
	}

ただし、これではプラグインで `"default"` テンプレートが更新された場合に追従出来
ません。プラグインの更新時には一度 |cellwidths-functions-remove| か、
|:CellWidthsRemove| で削除した方が良いでしょう。
>lua
	-- lazy.nvim なら以下のように書けるでしょう。
	{
	  "delphinus/cellwidths.nvim",
	  opts = {
	    name = "user/default",
	    ---@param cw cellwidths
	    fallback = function(cw)
	      cw.load "default"
	      -- 何らかのカスタマイズを行う。
	      cw.add ...
	    end,
	  }
	  -- プラグイン更新時には一旦削除する。
	  build = ":CellWidthsRemove",
	}

------------------------------------------------------------------------------
DEBUGGING					    *cellwidths-usage-debugging*

|cellwidths-functions-setup-log_level| に `"DEBUG"` を指定すると読み込みに掛かった
時間を取得出来ます。
>
	[cellwidths] successfully loaded the table from user/custom
	[cellwidths] setup() has taken 0.717 milliseconds

`"TRACE"` を指定すると更に詳細な情報が得られます。

------------------------------------------------------------------------------
DEVELOPING					   *cellwidths-usage-developing*

このプラグインのソースには `lua-language-server` に対応した Type Annotations を
記載しています。|LSP| のセットアップを行うことで型などの情報が表示出来ます。

https://github.com/sumneko/lua-language-server
>lua
	-- cellwidths クラスとして認識されます。
	local cw = require "cellwidths"

==============================================================================
FUNCTIONS						  *cellwidths-functions*

						    *cellwidths-functions-setup*
setup()		プラグインを読み込みます。この関数を呼ばない限り、システムに影
		響を与えることはありません。以下のようなオプションが指定出来ま
		す。

					       *cellwidths-functions-setup-name*
		name		(default: `"empty"`)
				テンプレート名を指定します。以下の値が指定出来
				ます。
				- `"empty"`: 何も設定しません。
				- `"default"`: |vim-ambiwidth| のデフォルト値です。
				- `"cica"`: Cica フォント用の設定です。
				- `"sfmono_square"`: SF Mono Square フォント用の
						   設定です。
				`"default"`, `"cica"` は以下のプラグインから拝借し
				ています。
				https://github.com/rbtnn/vim-ambiwidth

				これらのテンプレートをカスタムして使う場合は
				`"user/foo"` といった名称を指定して下さい。この
				場合は |cellwidths-functions-setup-fallback| が
				必須になります。

					  *cellwidths-functions-setup-log_level*
		log_level	(default: `"INFO"`)
				プラグインが表示する通知の最低レベルを指定しま
				す。指定出来る値は |log_levels| を参照して下さい。

					   *cellwidths-functions-setup-fallback*
		fallback	(default: `nil`)
				独自の設定を作る関数を指定します。引数には
				`cellwidths` クラスのインスタンスが与えられます。
				利用例は |cellwidths-usage| を参照して下さい。

						      *cellwidths-functions-add*
add()		設定を追加します。
>lua
		-- 一文字だけ指定します。
		cw.add(0x2103, 2)
		-- 文字範囲を指定します。
		cw.add { 0x2160, 0x2169, 2 }
		-- 複数指定することも可能です。
		cw.add { { 0x2170, 0x2179, 2 }, { 0x2190, 0x2193, 2 } }
<
						   *cellwidths-functions-delete*
delete()	指定した設定を削除します。削除すべき値が存在しない場合もエラー
		になりません。
>lua
		cw.delete(0x2103)
		-- 複数指定することも出来ます。
		cw.delete { 0x2104, 0x2105 }
<
						     *cellwidths-functions-load*
load()		テンプレートを読み込みます。
>lua
		cw.load "default"
<
						   *cellwidths-functions-remove*
remove()	テンプレートを削除します。`user/` 接頭辞は省いても自動的に補われ
		ます。引数を省略した場合、現在利用中のテンプレートを削除します。

		NOTE: プラグイン規定のテンプレートは削除出来ません。
>lua
		-- "user/custom" テンプレートを削除します。
		cw.remove "custom"

		-- 現在利用中のテンプレートを削除します。
		cw.remove()
<
==============================================================================
COMMANDS						   *cellwidths-commands*

								*:CellWidthsAdd*
:CellWidthsAdd {args}		設定を追加します。{args} は Lua の式として評価
				されますので、|cellwidths-functions-add| と同様
				のものが指定出来ます。
>vim
				:CellWidthsAdd 0x2103, 2
				:CellWidthsAdd { 0x2160, 0x2169, 2 }
				:CellWidthsAdd { { 0x2170, 0x2179, 2 } }
<
							     *:CellWidthsDelete*
:CellWidthsDelete {args}	設定を削除します。{args} は Lua の式として評価
				されますので、|cellwidths-functions-delete| と同
				様のものが指定出来ます。
>vim
				:CellWidthsDelete 0x2103
				:CellWidthsDelete { 0x2104, 0x2105 }
<
							       *:CellWidthsLoad*
:CellWidthsLoad {args}		テンプレートを読み込みます。
>vim
				:CellWidthsLoad user/custom
<
							     *:CellWidthsRemove*
:CellWidthsRemove {args}	テンプレートを削除します。`user/` 接頭辞は省いて
				も自動的に補われます。引数を省略した場合、現在
				利用中のテンプレートが削除されます。

				NOTE: プラグイン規定のテンプレートは削除出来ま
				せん。
>vim
				" どちらも同じ意味です。
				:CellWidthsRemove custom

				" 現在利用中のものを削除します。
				:CellWidthsRemove

==============================================================================
VERSIONING						 *cellwidths-versioning*

テンプレートのうち、`sfmono_square` については SF Mono Square のバージョンに合わ
せて内容を変更しています。そのためこのプラグインを利用する際は SF Mono Square
v2.1.0 以前に関しては `"v1.0.0"` のタグを、それより後は SF Mono Square のバー
ジョンに合わせたタグを利用してください。
>lua
	-- for lazy.nvim
	{
	  "delphinus/cellwidths.nvim",
	  -- SF Mono Square v2.1.0 以前
	  tag = "v1.0.0",
	  -- SF Mono Square v2.2.0 以降はそのバージョンを
	  -- そのまま指定してください
	  tag = "v2.2.0",
	}

タグの指定が無い場合、常に最新版が利用されます。

==============================================================================
CAVEATS							    *cellwidths-caveats*

					 *cellwidths-caveats-need-setcellwidths*
このプラグインは |setcellwidths()| を実装した最新の Neovim で動作します。

					 *cellwidths-caveats-east-asian-width-w*
これは |setcellwidths()| 自体の制限ですが、設定する対象の文字は East Asian Width
が “W” のものに限られます。

https://ja.wikipedia.org/wiki/東アジアの文字幅

特定の文字について East Asian Width を調べるには |eaw.nvim| を使ってください。

https://github.com/delphinus/eaw.nvim

==============================================================================
REFERENCES						 *cellwidths-references*

- vim-ambiwidth
  https://github.com/rbtnn/vim-ambiwidth
- Cica フォント
  https://github.com/miiton/Cica
- SF Mono Square フォント
  https://github.com/delphinus/homebrew-sfmono-square
- delphinus/eaw.nvim: Yet another plugin for East Asian Width characters.
  https://github.com/delphinus/eaw.nvim

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
