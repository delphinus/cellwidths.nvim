cellwidths.jax		setcellwidths() を使い易くします

Author: delphinus <me@delphinus.dev>
License: MIT license

CONTENTS						   *cellwidths-contents*

Introduction		|cellwidths-introduction|
Install			|cellwidths-install|
Usage			|cellwidths-usage|
  Further Usecase	|cellwidths-usage-further-usecase|
  Debugging		|cellwidths-usage-debugging|
  Developing		|cellwidths-usage-developing|
Features		|cellwidths-features|
Caveats			|cellwidths-caveats|
References		|cellwidths-references|

==============================================================================
INTRODUCTION					       *cellwidths-introduction*

これは |setcellwidths()| を簡単に設定するためのプラグインです。一般に、この関数
は以下のように利用されます。
>
	vim.fn.setcellwidths {
	  { 0x2103, 0x2103, 2 },
	  { 0x2160, 0x2169, 2 },
	}
<
引数には `{ 開始, 終了, 文字幅 }` という配列の配列を指定するのですが、いくつかの
理由から直接指定するのが困難です。

  - 現在指定している値を後から参照出来ない。
  - 値の追加、削除は出来ず、全ての配列を毎回指定しないといけない。
  - |'listchars'| や |'fillchars'| に指定した値と被っていると設定に失敗する。

このプラグインはこれらを解決します。

==============================================================================
INSTALL							    *cellwidths-install*

|'packpath'| 配下のディレクトリにクローンして下さい。
>
	git clone https://github.com/delphinus/cellwidths.nvim \
	  ~/.local/share/nvim/site/pack/foo/start/cellwidths.nvim

|init.lua| で |cellwidths-features-setup| を呼び出すと使えます。
>
	-- 'listchars' と 'fillchars' を事前に設定しておくのがお勧めです。
	-- vim.opt.listchars = { eol = "⏎" }
	-- vim.opt.fillchars = { eob = "‣" }
	require("cellwidths").setup {
	  name = "default",
	}

または、好きなプラグインマネージャーを使って下さい。
>
	-- for packer.nvim
	use {
	  "delphinus/cellwidths.nvim",
	  config = function()
	    -- 'listchars' と 'fillchars' を事前に設定しておくのがお勧めです。
	    -- vim.opt.listchars = { eol = "⏎" }
	    -- vim.opt.fillchars = { eob = "‣" }
	    require("cellwidths").setup {
	      name = "default",
	    }
	  end,
	}

==============================================================================
USAGE							      *cellwidths-usage*

予め定められた値を利用するにはテンプレート名を指定して呼び出して下さい。
>
	require("cellwidths").setup { name = "default" }

オリジナルの設定を作りたい場合は以下のようにして下さい。
>
	require("cellwidths").setup {
	  name = "user/custom",
	  ---@param cw cellwidths
	  fallback = function(cw)
	    -- 特定のテンプレートから追加・削除を行いたい場合は最初に load() を呼んで下さい。
	    -- cw.load "default"

	    -- 好きな設定を追加します。以下のどの書式でも構いません。
	    cw.add(0x2103, 2)
	    cw.add { 0x2160, 0x2169, 2 }
	    cw.add {
	      { 0x2170, 0x2179, 2 },
	      { 0x2190, 0x2193, 2 },
	    }

	    -- 削除も出来ます。設定に存在しないコードポイントを指定してもエラーになりません。
	    cw.delete(0x2103)
	    cw.delete { 0x2104, 0x2105, 0x2106 }
	  end,
	}

予め提供されたテンプレートを指定する場合、毎回 |'listchars'|, |'fillchars'| の値と
被っていないか検査します。自身で設定を保存した場合はこれが省かれるため、読み込
みが高速化されます。

設定を保存したファイルはプラグイントップの `lua/templates/user/custom.lua` のよ
うなパスに保存されます。これには設定時の |'listchars'|, |'fillchars'| の値も保存さ
れ、次回以降、起動時に値が異なっていた場合は自動的に作り直されます。

------------------------------------------------------------------------------
FURTHER USECASE				      *cellwidths-usage-further-usecase*

テンプレートは |string.dump()| でコンパイルした状態で保存されるため読み込みも高
速ですが、予め提供されたテンプレートは |'listchars'|, |'fillchars'| の値と被ってい
ないか毎回検査されるため多少処理が重くなります。何も設定を増減しない場合でも、
`user/foo` テンプレートとして利用する方が高速になります。
>
	require("cellwidths").setup {
	  name = "user/default",
	  ---@param cw cellwidths
	  fallback = function(cw)
	    -- "default" テンプレートをそのまま使う。
	    cw.load "default"
	  end,
	}

ただし、これではプラグインで `"default"` テンプレートが更新された場合に追従出来
ません。プラグインの更新時には一度 |cellwidths-features-remove| で削除した方が良
いでしょう。
>
	-- packer.nvim なら以下のように書けるでしょう。
	use {
	  "delphinus/cellwidths.nvim",
	  config = function()
	    require("cellwidths").setup {
	      name = "user/default"
	      ---@param cw cellwidths
	      fallback = function(cw)
	        cw.load "default"
	        -- 何らかのカスタマイズを行う。
	        cw.add ...
	      end,
	    }
	  end,
	  run = function()
	    -- プラグイン更新時には一旦削除する。
	    require("cellwidths").remove "user/default"
	  end,
	}

------------------------------------------------------------------------------
DEBUGGING					    *cellwidths-usage-debugging*

|cellwidths-features-setup-log_level| に `"DEBUG"` を指定すると読み込みに掛かった
時間を取得出来ます。
>
	[cellwidths] successfully loaded the table from user/custom
	[cellwidths] setup() has taken 0.000717 milliseconds

`"TRACE"` を指定すると更に詳細な情報が得られます。

------------------------------------------------------------------------------
DEVELOPING					   *cellwidths-usage-developing*

このプラグインのソースには `lua-language-server` に対応した Type Annotations を
記載しています。|LSP| のセットアップを行うことで型などの情報が表示出来ます。

https://github.com/sumneko/lua-language-server
>
	-- cellwidths クラスとして認識されます。
	local cw = require "cellwidths"

==============================================================================
FEATURES						   *cellwidths-features*

						     *cellwidths-features-setup*
setup()		プラグインを読み込みます。この関数を呼ばない限り、システムに影
		響を与えることはありません。以下のようなオプションが指定出来ま
		す。

					        *cellwidths-features-setup-name*
		name		(default: `"empty"`)
				テンプレート名を指定します。以下の値が指定出来
				ます。
				- `"empty"`: 何も設定しません。
				- `"default"`: |vim-ambiwidth| のデフォルト値です。
				- `"cica"`: Cica フォント用の設定です。
				- `"sfmono_square"`: SF Mono Square フォント用の
						   設定です。
				`"default"`, `"cica"` は以下のプラグインから拝借し
				ています。
				https://github.com/rbtnn/vim-ambiwidth

				これらのテンプレートをカスタムして使う場合は
				`"user/foo"` といった名称を指定して下さい。この
				場合は |cellwidths-features-setup-fallback| が必
				須になります。

					   *cellwidths-features-setup-log_level*
		log_level	(default: `"INFO"`)
				プラグインが表示する通知の最低レベルを指定しま
				す。指定出来る値は |log_levels| を参照して下さい。

					    *cellwidths-features-setup-fallback*
		fallback	(default: `nil`)
				独自の設定を作る関数を指定します。引数には
				`cellwidths` クラスのインスタンスが与えられます。
				利用例は |cellwidths-usage| を参照して下さい。

						       *cellwidths-features-add*
add()		設定を追加します。
>
		-- 一文字だけ指定します。
		cw.add(0x2103, 2)
		-- 文字範囲を指定します。
		cw.add { 0x2160, 0x2169, 2 }
		-- 複数指定することも可能です。
		cw.add { { 0x2170, 0x2179, 2 }, { 0x2190, 0x2193, 2 } }
<
						    *cellwidths-features-delete*
delete()	指定した設定を削除します。削除すべき値が存在しない場合もエラー
		になりません。
>
		cw.delete(0x2103)
		-- 複数指定することも出来ます。
		cw.delete { 0x2104, 0x2105 }
<
						      *cellwidths-features-load*
load()		テンプレートを読み込みます。
>
		cw.load "default"
<
						    *cellwidths-features-remove*
remove()	テンプレートを削除します。
>
		-- "user/custom" テンプレートを削除します。
		cw.remove "custom"
<
==============================================================================
CAVEATS							    *cellwidths-caveats*

このプラグインは |setcellwidths()| を実装した最新の Neovim で動作します。

==============================================================================
REFERENCES						 *cellwidths-references*

- vim-ambiwidth
  https://github.com/rbtnn/vim-ambiwidth
- Cica フォント
  https://github.com/miiton/Cica
- SF Mono Square フォント
  https://github.com/delphinus/homebrew-sfmono-square

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
